<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
  <title><%= title %></title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.min.css">
  <link href="https://fonts.googleapis.com/css?family=Montserrat|Open+Sans" rel="stylesheet">

  <script type="text/javascript" src="javascripts/paper-full.min.js"></script>
  <script type = "text/paperscript" canvas = "canvas-1" src="/javascripts/splash.js"></script>


</head>
<body>

  <div class="canvas">

    <canvas id="canvas-1" resize hidpi="off"></canvas>


    <div class="header">
      <a class="link" id="analytics" href="#animatedModal">Analytics</a>
      <a class="link" id="analytics2" href="#modal2">Analytics2</a>

    </div>

    <div class = "container">
      <p class="keywords"></p>
      <div class="outer_circ">
        <div id="my_camera" style="width:500px; height:400px;"></div>
        <div id="my_result"></div>
        <h1 id="cam_clicker" onclick="take_snapshot()">CLICK</h1>
        <div class="middle_circ animated bounceIn">
          <div class="innermost_circ">
            <h1 id="cam_trigger" class="animated pulse infinite">HEAP SORT</h1>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="animatedModal">
    <!--THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID  class="close-animatedModal" -->
    <div class="close-animatedModal"> 
      <center><img class="closebt" src="/images/closebt.svg"></center>
    </div>

    <div class="modal-content">
      <div class="chart" id="bar_chart">

      </div>
      <div class="chart" id="word_cloud">
          <svg id="wordcloudSVG"></svg>
      </div>
    </div>
  </div>





  

</body>

<script src="/javascripts/webcam.min.js"></script> 

<script   src="https://code.jquery.com/jquery-3.1.0.min.js"   integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s="   crossorigin="anonymous"></script>

<script type="text/javascript" src="https://api.filestackapi.com/filestack.js"></script>
<script src="/javascripts/jquery.easing.js"></script> 
<script src="https://cdn.firebase.com/js/client/2.4.2/firebase.js"></script>
<script src="/javascripts/animatedModal.min.js"></script> 
<script src="https://d3js.org/d3.v3.min.js"></script>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script>

  var compost = ["food", "eaten", "paper"];
  var recycle = ["drink", "can", "bottle", "container", "plastic", "eyewear", "table", "chair"];


  function ConvertToCSV(objArray) {
    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;
    var str = '';

    for (var i = 0; i < array.length; i++) {
      var line = '';
      for (var index in array[i]) {
        if (line != '') line += ','

          line += array[i][index];
      }

      str += line + '\r\n';
    }

    return str;
  }




  function take_snapshot() {
    Webcam.snap( function(data_uri) {
      $('#my_camera').toggle(500);
      $('#cam_clicker').toggle(500, function(){
        document.getElementById('my_result').innerHTML = '<img src="'+data_uri+'"/>';
        console.log(data_uri);
        $('#my_result').toggle(500);
        //window.location.href = '/'+'\''+data_uri.toString()+'\'';
        temp = 4;
        paper.project.view.update();

        $.ajax({
          method: "POST",
          url:"/image",
          data:{body: data_uri},
          dataType: "text"
        }).done(function(res){
          response = JSON.parse(res);
          console.log(response);
          $('.keywords').empty();     

          (function myLoop (i) {          
            setTimeout(function () {   
                $('.keywords').append("<span class='animated rotateIn'>"+"&nbsp"+response[i]+"&nbsp"+"</span>");         //  your code here                
                if (--i) myLoop(i);      //  decrement i and call myLoop again if i > 0
              }, 200)
          })(10);

          for(var j in response){
            if(compost.indexOf(response[j])>-1){
              setTimeout(function(){
               temp = 2;
               FillColor = "#F4E842";
               paper.project.view.update();
               $('#my_result').toggle(500); 
               $('#cam_trigger').html("Compost!");
               $('.middle_circ').toggle(500);
             }, 2000)
              console.log("Compost!!")
              return;
            }

            else if(recycle.indexOf(response[j])>-1){
              setTimeout(function(){
               temp = 1;
               FillColor = "#84DCC6";
               paper.project.view.update();
               $('#my_result').toggle(500); 
               $('#cam_trigger').html("Recycle!");
               $('.middle_circ').toggle(500);
             }, 2000)
              console.log("Recycle!!")
              return;
            }
          }

          
          setTimeout(function(){
            temp = 3;
            
            paper.project.view.update();
            $('#my_result').toggle(500); 
            $('#cam_trigger').html("Landfill!");
            $('.middle_circ').toggle(500);
          }, 2000)
        })
        .fail(function(res){
          console.log(res);

          setTimeout(function(){
            temp = 3;
            FillColor = "#84DCC6";
            paper.project.view.update();
            $('#my_result').toggle(500); 
            $('#cam_trigger').html("Landfill!");
            $('.middle_circ').toggle(500);
          }, 2000)
        })


        // filepicker.setKey("A5svCF4nfRZaTN39PpcE3z");
        

        // filepicker.store(
        //   data,
        //   {filename: 'HeapSort3.jpeg', mimetype: 'image/jpeg', base64decode: true},
        //   function(new_blob){
        //     console.log(JSON.stringify(new_blob));
        //   }
        //   );
      });
      
    } );
  }

  $(document).ready(function(){
    var composition = <%- JSON.stringify(comp) %>;
    var wordCloud =  <%- JSON.stringify(cloud) %>;






    $("#analytics").animatedModal();
    $("#analytics2").animatedModal();



    var diameter = 500, //max size of the bubbles
    color    = d3.scale.category20b(); //color category

    var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

    var svg = d3.select("#word_cloud")
    .append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

    //var cloudCSV = ConvertToCSV(JSON.stringify([wordCloud]));
    var cloudCSV = ["Tag", "Amount"];
    for(val in wordCloud){
      cloudCSV.push(val);
      cloudCSV.push(wordCloud[val]);
    }
    //console.log(wordCloud);
    cloudCSV= cloudCSV.join(",").toString();
    //console.log(cloudCSV);

    d3.csv("test.csv", function(error, data){

    //convert numerical values from strings to numbers
    data = data.map(function(d){ d.value = +d["Amount"]; return d; });

    console.log("Data = "+ data);

    //bubbles needs very specific format, convert data to this.
    var nodes = bubble.nodes({children:data}).filter(function(d) { return !d.children; });

    //setup the chart
    var bubbles = svg.append("g")
    .attr("transform", "translate(0,0)")
    .selectAll(".bubble")
    .data(nodes)
    .enter();

    //create the bubbles
    bubbles.append("circle")
    .attr("r", function(d){ return d.r; })
    .attr("cx", function(d){ return d.x; })
    .attr("cy", function(d){ return d.y; })
    .style("fill", function(d) { return color(d.value); });

    //format the text for each bubble
    bubbles.append("text")
    .attr("x", function(d){ return d.x; })
    .attr("y", function(d){ return d.y + 5; })
    .attr("text-anchor", "middle")
    .text(function(d){ return d["Tag"]; })
    .style({
      "fill":"white", 
      "font-family":"Helvetica Neue, Helvetica, Arial, san-serif",
      "font-size": "12px"
    });
  })     



    var data = composition;
    var layout = {
      title: 'Waste Items Today'
    };
    Plotly.newPlot('bar_chart', data, layout);

    Webcam.set({
      width: 400,
      height: 300,
      dest_width: 400,
      dest_height: 300,
      image_format: 'jpeg',
      jpeg_quality: 90,
      force_flash: false,
      flip_horiz: true,
      fps: 45
    });

    $('#cam_trigger').on("click", function(){
      $('.middle_circ').toggle(500,"easeInOutCubic", function(){

        $('.outer_circ').animate({'height': '550px', 'width': '550px'}, 2000, "easeInOutCubic");
        $('#my_camera').toggle(500, function(){
          Webcam.attach( '#my_camera', function(){

          });
          $('#cam_clicker').toggle(500);
        });

      });


    });



  });


</script> 
</html>
